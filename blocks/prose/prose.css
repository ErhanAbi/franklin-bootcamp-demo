.prose {
  --prose-max-width: 800px;
  --prose-body: var(--color-gray-700);
  --prose-headings: var(--color-gray-900);
  --prose-links: var(--color-gray-900);
  --prose-bold: var(--color-gray-900);
  --prose-counters: var(--color-gray-500);
  --prose-bullets: var(--color-gray-300);
  --prose-hr: var(--color-gray-200);
  --prose-quotes: var(--color-gray-900);
  --prose-quote-borders: var(--color-gray-200);
  --prose-captions: var(--color-gray-500);
  --prose-code: var(--color-gray-900);
  --prose-pre-code: var(--color-gray-200);
  --prose-pre-bg: var(--color-gray-800);
  --prose-th-borders: var(--color-gray-400);
  --prose-td-borders: var(--color-gray-200);

  max-width: var(--prose-max-width);
  font-size: 1rem;
  line-height: 1.75;
  color: var(--prose-body);
}

.prose :where(a) {
  color: var(--prose-links);
  font-weight: 500;
  text-decoration: underline;
}

.prose :where(strong) {
  color: var(--prose-bold);
  font-weight: 600;
}

.prose :where(ol) {
  list-style-type: decimal;
  padding-left: 1.625em;
}

.prose :where(ul) {
  list-style-type: disc;
  padding-left: 1.625em;
}

.prose :where(ol > li)::marker {
  color: var(--prose-counters);
  font-weight: 400;
}

.prose :where(ul > li)::marker {
  color: var(--prose-bullets);
}

.prose :where(hr) {
  border-color: var(--prose-hr);
  border-top-width: 1px;
  margin-bottom: 3em;
  margin-top: 3em;
}

.prose :where(blockquote) {
  border-left-color: var(--prose-quote-borders);
  border-left-width: 0.25rem;
  color: var(--prose-quotes);
  font-style: italic;
  font-weight: 500;
  margin-bottom: 1.6em;
  margin-top: 1.6em;
  padding-left: 1em;
  quotes: "\201C""\201D""\2018""\2019";
}

.prose :where(blockquote p:first-of-type)::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type)::after {
  content: close-quote;
}

.prose :where(h1) {
  color: var(--prose-headings);
  font-size: 2.25em;
  font-weight: 800;
  line-height: 1.1111;
  margin-bottom: 0.8889em;
  margin-top: 0;
}

.prose :where(h1 strong) {
  font-weight: 900;
}

.prose :where(h2) {
  color: var(--prose-headings);
  font-size: 1.5em;
  font-weight: 700;
  line-height: 1.3333;
  margin-bottom: 1em;
  margin-top: 2em;
}

.prose :where(h2 strong) {
  font-weight: 800;
}

.prose :where(h3) {
  color: var(--prose-headings);
  font-size: 1.25em;
  font-weight: 600;
  line-height: 1.6;
  margin-bottom: 0.6em;
  margin-top: 1.6em;
}

.prose :where(h3 strong) {
  font-weight: 700;
}

.prose :where(h4) {
  color: var(--prose-headings);
  font-weight: 600;
  line-height: 1.5;
  margin-bottom: 0.5em;
  margin-top: 1.5em;
}

.prose :where(h4 strong) {
  font-weight: 700;
}

.prose :where(figure > *) {
  margin-bottom: 0;
  margin-top: 0;
}

.prose :where(figcaption) {
  color: var(--prose-captions);
  font-size: 0.875em;
  line-height: 1.4285;
  margin-top: 0.8571em;
}

.prose :where(code) {
  color: var(--prose-code);
  font-size: 0.875em;
  font-weight: 600;
}

.prose :where(code)::before {
  content: "`";
}

.prose :where(code)::after {
  content: "`";
}

.prose :where(a code) {
  color: var(--prose-links);
}

.prose :where(pre) {
  background-color: var(--prose-pre-bg);
  border-radius: 0.375rem;
  color: var(--prose-pre-code);
  font-size: 0.875em;
  font-weight: 400;
  line-height: 1.7142;
  margin-bottom: 1.7142em;
  margin-top: 1.7142em;
  overflow-x: auto;
  padding: 0.8571em 1.1428em;
}

.prose :where(pre code) {
  background-color: transparent;
  border-radius: 0;
  border-width: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  padding: 0;
}

.prose :where(pre code)::before {
  content: none;
}

.prose :where(pre code)::after {
  content: none;
}

.prose :where(table) {
  font-size: 0.875em;
  line-height: 1.7142;
  margin-bottom: 2em;
  margin-top: 2em;
  table-layout: auto;
  text-align: left;
  width: 100%;
  border-collapse: collapse;
}

.prose :where(thead) {
  border-bottom: 1px solid var(--prose-th-borders);
}

.prose :where(thead th) {
  color: var(--prose-headings);
  font-weight: 600;
  padding-bottom: 0.5714em;
  padding-left: 0.5714em;
  padding-right: 0.5714em;
  vertical-align: bottom;
}

.prose :where(thead th) p {
  display: inline-block;
  margin: 0;
}

.prose :where(tbody tr) {
  border-bottom: 1px solid var(--prose-td-borders);
}

.prose :where(tbody tr:last-child) {
  border-bottom-width: 0;
}

.prose :where(tbody td) {
  padding: 0.5714em;
  vertical-align: baseline;
}

.prose :where(tbody td) p {
  display: inline-block;
  margin: 0;
}

.prose :where(p) {
  margin-bottom: 1.25em;
  margin-top: 1.25em;
}

.prose :where(img) {
  border-radius: 0.5rem;
  width: 100%;
}

.prose :where(video) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.prose :where(figure) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.prose :where(h2 code) {
  font-size: 0.875em;
}

.prose :where(h3 code) {
  font-size: 0.9em;
}

.prose :where(li) {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
}

.prose :where(ol > li) {
  padding-left: 0.375em;
}

.prose :where(ul > li) {
  padding-left: 0.375em;
}

.prose > :where(ul > li p) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.prose > :where(ul > li > :first-child) {
  margin-top: 1.25em;
}

.prose > :where(ul > li > :last-child) {
  margin-bottom: 1.25em;
}

.prose > :where(ol > li > :first-child) {
  margin-top: 1.25em;
}

.prose > :where(ol > li > :last-child) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.prose :where(hr + *) {
  margin-top: 0;
}

.prose :where(h2 + *) {
  margin-top: 0;
}

.prose :where(h3 + *) {
  margin-top: 0;
}

.prose :where(h4 + *) {
  margin-top: 0;
}

.prose :where(thead th:first-child) {
  padding-left: 0;
}

.prose :where(thead th:last-child) {
  padding-right: 0;
}

.prose :where(tbody td:first-child) {
  padding-left: 0;
}

.prose :where(tbody td:last-child) {
  padding-right: 0;
}

.prose > :where(:first-child) {
  margin-top: 0;
}

.prose > :where(:last-child) {
  margin-bottom: 0;
}

.prose picture {
  display: inline-block;
  line-height: initial;
  font-size: initial;
  color: initial;
}
